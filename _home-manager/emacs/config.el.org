#+title: Ja0nz Emacs Configuration
#+STARTUP: fold
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/personal/config.el :mkdirp yes

* Package lists and use-package
  #+begin_src emacs-lisp
    (require 'package)
    (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
    (require 'use-package)
    (setq use-package-always-ensure t)
  #+end_src

* Keybindings
  #+begin_src emacs-lisp
    (define-key prelude-mode-map (kbd "M-s-r") 'consult-recent-file)
    (global-set-key (kbd "M-n") 'windmove-left)
    (global-set-key (kbd "M-t") 'windmove-right)

    (key-chord-define-global "rr" 'consult-buffer)
    ;; (key-chord-define-global "GG" 'ace-window)
    ;; (key-chord-define-global "hh" 'avy-goto-word-1) ;; First letter word
    ;; (key-chord-define-global "HH" 'crux-switch-to-previous-buffer)
    ;; (key-chord-define-global "hf" 'avy-goto-char) ;; any char
    ;; (key-chord-define-global "hF" 'avy-goto-line) ;; any line
    ;; (key-chord-define-global "qq" 'avy-pop-mark) ;; pop back to last mark
    ;; (key-chord-define-global "kk" 'undo-tree-visualize)
  #+end_src

* Selectrum setup
** Consult package
   #+begin_src emacs-lisp
     (use-package consult
       :bind (:map global-map
                   ("C-s" . consult-line)
                   ("C-r" . consult-ripgrep)))
   #+end_src
** Marginalia package
   #+begin_src emacs-lisp
     (use-package marginalia)
   #+end_src
** Embark package
   #+begin_src
     (use-package embark
       :after selectrum
       :bind (:map minibuffer-local-map
                   ("C-o" . embark-act)
                   ("C-S-o" . embark-act-noexit)
                   :map embark-file-map
                   ("j" . dired-jump)))
   #+end_src

* Theming
** Dracula Theme
   #+begin_src emacs-lisp
     (use-package dracula-theme
       :config (load-theme 'dracula t))
   #+end_src
** Font Face
   #+begin_src emacs-lisp
     ;; set Iosevka font only if it available
     (defun rag-set-face (frame)
       "Configure faces on frame creation"
       (select-frame frame)
       (if (display-graphic-p)
           (progn
             (when (member "Iosevka" (font-family-list))
               (progn
                 (set-frame-font "Iosevka-12" nil t))))))
     (add-hook 'after-make-frame-functions #'rag-set-face)
   #+end_src

* Org-bullets
  #+begin_src emacs-lisp
    (use-package org-bullets
      :hook (org-mode . org-bullets-mode))
  #+end_src

* Nix language
  #+begin_src emacs-lisp
    (use-package nix-mode
      :mode "\\.nix\\'")
  #+end_src

* YAS Snippets
  #+begin_src emacs-lisp
    (use-package yasnippet
      :init
      (yas-global-mode 1)
      :config
      (setq yas-snippet-dirs '("~/sysconf/_home-manager/emacs/yas-snippets")))
  #+end_src

* Org
** Org pomodoro
   #+begin_src emacs-lisp
     (use-package org-pomodoro
       :bind (("M-s-t t" . org-pomodoro))
       :config
       (setq org-pomodoro-audio-player (executable-find "notify-send")
             org-pomodoro-start-sound-p t
             org-pomodoro-killed-sound-p t
             org-pomodoro-start-sound " *org-pomodoro* - ‚è±START‚è±"
             org-pomodoro-finished-sound " *org-pomodoro* - üèÉFINISHüèÉ"
             org-pomodoro-overtime-sound " *org-pomodoro* - ‚è∞OVERTIME‚è∞"
             org-pomodoro-killed-sound " *org-pomodoro* - üíÄKILLEDüíÄ"
             org-pomodoro-short-break-sound " *org-pomodoro* - üç∞SHORT BREAK FINISHEDüç∞"
             org-pomodoro-long-break-sound " *org-pomodoro* - üçñLONG BREAK FINISHEDüçñ"
             org-pomodoro-ticking-sound " *org-pomodoro* - ü•Åticktackü•Å"))
   #+end_src
* Minios
  #+begin_src emacs-lisp
    (use-package minions
      :config (minions-mode 1))
  #+end_src
* Calendar
  #+begin_src emacs-lisp
    (use-package calendar
      :config
      (setq
       calendar-date-style "european"
       calendar-week-start-day 1))
  #+end_src

  #+RESULTS:
  : t
* MU4E
gnutls mu mbsync pandoc
https://gitlab.com/dwt1/dotfiles/-/blob/e48a77ab4afa4410f8db124487989ef7fd88cd73/.doom.d/config.org#mu4e
