#!/usr/bin/env bash
# Switch PipeWire port of the default audio sink.
# This is a scripted approach following the official docs:
# https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/Migrate-PulseAudio#sinksource-port-volumemuteport-latency
#
# CAUTION: It's a hack but it works for me.
#
# Usage:
#  $ ./switch-audio-port

# Config: Devices of relevance
OPTS=("headphones" "speaker") # hdmi

# Obligatory Auto-Mute Disable
amixer -c 0 sset 'Auto-Mute Mode' Disabled --quiet

# Get default audio sink name
SINK=$(pw-metadata 0 'default.audio.sink' | sed -n 's/^.*"name":"\(\S*\)".*$/\1/p')

# Get related device.id
DI=$(pw-cli i $SINK | sed -n 's/^.*device.id\s=\s"\(\S*\)".*$/\1/p')
# Get related card.profile.device
CPD=$(pw-cli i $SINK | sed -n 's/^.*card.profile.device\s=\s"\(\S*\)".*$/\1/p')

# Get the index of a "speaker", "headphones", "hdmi"
function getIDX {
	echo $(pw-cli e $DI EnumRoute | awk "/$1/,/String \"[0-9]+\"/" | tail -n1 | grep -oP '\d+')
}

for opt in "${OPTS[@]}"; do
	ISACTIVE=$(pw-cli e $DI Route | awk "/String \"$(getIDX $opt)\"/")
	if [[ -n $ISACTIVE ]]; then
		IDXOPT=$(echo "${OPTS[@]/$opt//}" | cut -d/ -f1 | wc -w | tr -d '')
		NEXT=$(if [ $((${#OPTS[@]} - 1)) -eq $IDXOPT ]; then echo 0; else echo $(($IDXOPT + 1)); fi)
		pw-cli s $DI Route "{ index: $(getIDX ${OPTS[$NEXT]}), device: $CPD }" 1>/dev/null
		break
	fi
done
