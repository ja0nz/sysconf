#+STARTUP: content
#+OPTIONS: \n:t

* Nix + Home Manager + Arch combo
This manual walks you from an already existing *vanilla Arch Linux* (described throughly in [[file:../../docs/arch-installation.org][Arch Linux installation]] or in the [[https://wiki.archlinux.org/title/Installation_guide#Installation][Official Arch Linux docs]]) to an system containing *nix and home manager* on top.

This manual will probably work with other *nix distro (and even MacOS)! But as I just tried and tested it with Arch Linux I will restrict this manual to Arch only.

* Contents :toc:
- [[#nix--home-manager--arch-combo][Nix + Home Manager + Arch combo]]
- [[#nix-installation][Nix Installation]]
  - [[#single-user-installation][Single User installation]]
  - [[#multi-user-installation][Multi User installation]]
  - [[#test-your-nix-installation][Test your nix installation]]
- [[#home-manager-installation][Home Manager installation]]
  - [[#add-the-home-manager-nix-channel][Add the home manager nix channel]]
  - [[#extend-nix_path-multi-user-nix-only][Extend NIX_PATH (multi user nix only)]]
  - [[#install-the-home-manager][Install the home manager]]
  - [[#clonedownload-this-repo][Clone/Download this repo]]
  - [[#link-to-repo---homenix][Link to repo -> home.nix]]
  - [[#switch-to-a-new-home-generation][Switch to a new home generation]]
- [[#further-notice][Further notice]]

* Nix Installation
** Single User installation
_Requirements:_
- sudo rights OR ~mkdir /nix && chown <alice> /nix~ beforehand

The whole process is described in the [[https://nixos.org/manual/nix/stable/#sect-single-user-installation][nix manual]]. Please refer to it directly.

Using nix as single user is very straight forward and a good choice on a single "throw away" dev machine.

*** Remove single user installation
#+begin_src shell
# remove the . "$HOME/.nix-profile/etc/profile.d/nix.sh" line in your ~/.profile or ~/.bash_profile
rm -rf $HOME/{.nix-channels,.nix-defexpr,.nix-profile,.config/nixpkgs}
sudo rm -rf /nix # for the nix store
#+end_src
*** Update nix from time to time
#+begin_src shell
nix-channel --update; nix-env -iA nixpkgs.nix nixpkgs.cacert
#+end_src
** Multi User installation
_Requirements:_
- rsync
- sudo rights

The whole process is described in the [[https://nixos.org/manual/nix/stable/#sect-multi-user-installation][nix manual]]. Please refer to it directly.

*** Remove multi user installation
#+begin_src shell
sudo rm -rf /root/{.nix-channels,.nix-defexpr,.nix-profile}
rm -rf $HOME/{.nix-channels,.nix-defexpr,.nix-profile,.config/nixpkgs}
sudo rm -rf /etc/nix /nix # for the nix store

# If you are on Linux with systemd, you will need to run:
sudo systemctl stop nix-daemon.socket
sudo systemctl stop nix-daemon.service
sudo systemctl disable nix-daemon.socket
sudo systemctl disable nix-daemon.service
sudo systemctl daemon-reload
#+end_src

*** Restricting access
To limit which users can perform Nix operations, you can use the permissions on the directory /nix/var/nix/daemon-socket. For instance, if you want to restrict the use of Nix to the members of a group called *nix-users*, do

#+begin_src shell
sudo chgrp nix-users /nix/var/nix/daemon-socket
sudo chmod ug=rwx,o= /nix/var/nix/daemon-socket
#+end_src

This way, users who are not in the nix-users group cannot connect to the Unix domain socket /nix/var/nix/daemon-socket/socket, so they cannot perform Nix operations.
*** Update nix from time to time
#+begin_src shell
nix-channel --update; nix-env -iA nixpkgs.nix nixpkgs.cacert; systemctl daemon-reload; systemctl restart nix-daemon
#+end_src

** Test your nix installation
#+begin_src shell
nix-shell -p hello --run hello
#+end_src

* Home Manager installation
_Requirements:_
- a running nix -> test with ~nix-shell -p hello --run hello~

The whole process of installing home manager is described in the [[https://github.com/nix-community/home-manager][official home manager GitHub]]. Please refer to it in case you got stuck.

** Add the home manager nix channel
#+begin_src shell
nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
nix-channel --update
#+end_src

** Extend NIX_PATH (multi user nix only)
See the tracking issue [[https://github.com/NixOS/nix/issues/2033][nix#2033]]
#+begin_src shell
# Put this in your .bashrc or the like
export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
#+end_src

** Install the home manager
#+begin_src shell
nix-shell '<home-manager>' -A install
#+end_src

** Clone/Download this repo
#+begin_src shell
git clone https://github.com/ja0nz/sysconf
#+end_src

** Link to repo -> home.nix
#+begin_src shell
rm ~/.config/nixpkgs/home.nix # remove factory home.nix
ln -s ~/sysconf/nixOS/Arch_Linux/home.nix ~/.config/nixpkgs/home.nix # Adapt path url
#+end_src

** Switch to a new home generation
#+begin_src shell
home-manager switch
#+end_src

* Further notice
All modules inside [[file:../../_home-manager/][./_home-manager]] have a throughly documentation. Some of them require (impure) settings upfront!
Note that I use nix mostly on quick'n'dirty VMs. While most of the settings are battle tested inside my running nixOS machine they may fail inside an elaborated nix settings. You may find out.
